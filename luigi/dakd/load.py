import os
import json
import sys, traceback

from dakd.utils import basicLogger
from dakd.utils import create_logger
from dakd.utils import basicLoggerDecorator
from dakd.utils import initConf
conf = initConf()
loadLogger = create_logger(conf["logger_load"])

@basicLoggerDecorator(loadLogger)
def updateDataFrame(element, results, label):

    final = []
    # read from disk
    if os.path.exists(conf["dataframe"]):
        df = open(conf["dataframe"],'r+')
    
        final = json.loads(df.read())
        df.close()

    # prepare element

    element = {
        "name" : element, 
        "label" : label,
        "hash" : results['hash']
        }
    for k,v in results.items():
        element[k] = v

    # update
    final.append(element)
    #print(final)

    #print(json.dumps(final, sort_keys=True, indent=4))


    # write to disk
    df = open(conf["dataframe"],'w+')
    df.write(json.dumps(final))
    df.close()